model Education {
    id                      Int            @id @default(autoincrement())
    principalSubject        String?        @db.VarChar(250) @map("principal_subject")
    school                  String?        @db.VarChar(250)
    university              String?        @db.VarChar(250)
    title                   String         @db.VarChar(250)
    city                    String?        @db.VarChar(250)
    state                   String?        @db.VarChar(250)
    createdAt               DateTime       @default(now()) @map("created_at")
    updatedAt               DateTime       @default(now()) @map("updated_at")

    candidates          EducationsOnCandidates[]

    @@map("educations")
}

model EducationsOnCandidates {
  id                        Int             @default(autoincrement()) @unique
  education                 Education       @relation(fields: [educationId], references: [id])
  educationId               Int             @map("education_id") // relation scalar field (used in the `@relation` attribute above)
  candidate                 Candidate       @relation(fields: [candidateId], references: [id])
  candidateId               Int             @map("candidate_id") // relation scalar field (used in the `@relation` attribute above)
  
  educationLevel            String?         @db.VarChar(250) @map("education_level")
  graduationDateFrom        DateTime?       @map("graduation_date_from")
  graduationDateUntil       DateTime?       @map("graduation_date_until")

  assignedAt                DateTime        @default(now()) @map("assigned_at")
  assignedBy                Int             @map("assigned_by")

  @@id([educationId, candidateId])

  @@map("educations_on_candidates")
}